<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="10" passed="7" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-07T09:11:20 IST" name="Suite" finished-at="2023-04-07T09:11:45 IST" duration-ms="25015">
    <groups>
    </groups>
    <test started-at="2023-04-07T09:11:20 IST" name="Test" finished-at="2023-04-07T09:11:45 IST" duration-ms="25015">
      <class name="com.Test_1.Test_testng_1">
        <test-method is-config="true" signature="BS()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:20 IST" name="BS" finished-at="2023-04-07T09:11:20 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BS -->
        <test-method is-config="true" signature="BT()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:20 IST" name="BT" finished-at="2023-04-07T09:11:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BT -->
        <test-method is-config="true" signature="BM()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:31 IST" name="BM" finished-at="2023-04-07T09:11:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method is-config="true" signature="BC()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:31 IST" name="BC" finished-at="2023-04-07T09:11:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method signature="Test_1()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:31 IST" name="Test_1" finished-at="2023-04-07T09:11:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_1 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:31 IST" name="AM" finished-at="2023-04-07T09:11:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method signature="Test_2()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:31 IST" name="Test_2" finished-at="2023-04-07T09:11:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_2 -->
        <test-method is-config="true" signature="BM()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:31 IST" name="BM" finished-at="2023-04-07T09:11:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method is-config="true" signature="AM()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:31 IST" name="AM" finished-at="2023-04-07T09:11:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:31 IST" name="AC" finished-at="2023-04-07T09:11:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
        <test-method is-config="true" signature="AT()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:45 IST" name="AT" finished-at="2023-04-07T09:11:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
        <test-method is-config="true" signature="AS()[pri:0, instance:com.Test_1.Test_testng_1@537f60bf]" started-at="2023-04-07T09:11:45 IST" name="AS" finished-at="2023-04-07T09:11:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- com.Test_1.Test_testng_1 -->
      <class name="com.Test_1.Test_testng_2">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.Test_1.Test_testng_2@4b8ee4de]" started-at="2023-04-07T09:11:20 IST" name="setup" finished-at="2023-04-07T09:11:25 IST" duration-ms="4755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="test_1()[pri:0, instance:com.Test_1.Test_testng_2@4b8ee4de]" started-at="2023-04-07T09:11:25 IST" name="test_1" finished-at="2023-04-07T09:11:26 IST" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Test_1.Test_testng_2@4b8ee4de]" started-at="2023-04-07T09:11:26 IST" name="tearDown" finished-at="2023-04-07T09:11:26 IST" duration-ms="805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.Test_1.Test_testng_2@4b8ee4de]" started-at="2023-04-07T09:11:26 IST" name="setup" finished-at="2023-04-07T09:11:30 IST" duration-ms="3236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="test_2()[pri:0, instance:com.Test_1.Test_testng_2@4b8ee4de]" started-at="2023-04-07T09:11:30 IST" name="test_2" finished-at="2023-04-07T09:11:30 IST" duration-ms="323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Test_1.Test_testng_2@4b8ee4de]" started-at="2023-04-07T09:11:30 IST" name="tearDown" finished-at="2023-04-07T09:11:31 IST" duration-ms="783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Test_1.Test_testng_2 -->
      <class name="com.Test_1.Test_Registration">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.Test_1.Test_Registration@5677323c]" started-at="2023-04-07T09:11:31 IST" name="setUp" finished-at="2023-04-07T09:11:39 IST" duration-ms="8230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verify_registrationPageTest()[pri:0, instance:com.Test_1.Test_Registration@5677323c]" started-at="2023-04-07T09:11:39 IST" name="verify_registrationPageTest" finished-at="2023-04-07T09:11:45 IST" duration-ms="6247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_registrationPageTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Test_1.Test_Registration@5677323c]" started-at="2023-04-07T09:11:45 IST" name="tearDown" finished-at="2023-04-07T09:11:45 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Test_1.Test_Registration -->
      <class name="com.Test_1.Test_Testng_3">
        <test-method signature="pqr()[pri:-1, instance:com.Test_1.Test_Testng_3@194bcebf]" started-at="2023-04-07T09:11:20 IST" name="pqr" finished-at="2023-04-07T09:11:20 IST" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.Test_1.Test_Testng_3.pqr(Test_Testng_3.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pqr -->
        <test-method signature="xyz()[pri:1, instance:com.Test_1.Test_Testng_3@194bcebf]" started-at="2023-04-07T09:11:20 IST" name="xyz" finished-at="2023-04-07T09:11:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method signature="xyz()[pri:1, instance:com.Test_1.Test_Testng_3@194bcebf]" started-at="2023-04-07T09:11:20 IST" name="xyz" finished-at="2023-04-07T09:11:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method signature="tab()[pri:3, instance:com.Test_1.Test_Testng_3@194bcebf]" started-at="2023-04-07T09:11:20 IST" name="tab" finished-at="2023-04-07T09:11:20 IST" depends-on-methods="com.Test_1.Test_Testng_3.pqr" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Test_Testng_3.tab()[pri:3, instance:com.Test_1.Test_Testng_3@194bcebf] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Test_Testng_3.tab()[pri:3, instance:com.Test_1.Test_Testng_3@194bcebf] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tab -->
      </class> <!-- com.Test_1.Test_Testng_3 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
